#!/bin/bash

set -e

HOME=/app
FAILDROP=$HOME/.buildfail # for containers always returning 0

## SYSTEM settings
MAXTHRD=$(($(nproc)+1))
#MAXTHRD=10
MINTHRD=8
MAMEGIT=$HOME/${1:-mame}
PREFIX=$HOME/output
REPO=https://github.com/mamedev/mame.git

## MAME settings
STG=${2:-mame}          # (mame|mess)
ARCH=$(uname -i)    # mame0227 started failing on this
TOOLS=1
REGENIE=1
NOWERROR=1
TRIES=1
TRCNT=1
NETWORKING=0
DEBUG=${DEBUG:-0}
PROFILER=0
OSD=sdl
#SOURCES=src/mame/pacman/pacman.cpp
#SOURCES=src/mame/namco/namcos11.cpp

## COMPILER
GCC_VER="gcc"
GPP_VER="g++"

### LOGGING
MAMELOGDIR=$HOME/logs/mame_compile
[ ! -d ${MAMELOGDIR} ] && mkdir -p ${MAMELOGDIR}

## MAKE options
MAKEOPT="-j${MAXTHRD} NOWERROR=${NOWERROR}"

# Testing  github issue
#MAKEOPT+=" OPTIMIZE=g"
#MAKEOPT+=" SANITIZE=address"
#
#MAKEOPT+=" USE_SYSTEM_LIB_EXPAT=1"
#MAKEOPT+=" USE_SYSTEM_LIB_ZLIB=1"
#MAKEOPT+=" USE_SYSTEM_LIB_JPEG=1"
#MAKEOPT+=" USE_SYSTEM_LIB_FLAC=1"
#MAKEOPT+=" USE_SYSTEM_LIB_SQLITE3=1"
#MAKEOPT+=" USE_SYSTEM_LIB_PORTMIDI=1"
#MAKEOPT+=" USE_SYSTEM_LIB_PORTAUDIO=1"
#MAKEOPT+=" USE_SYSTEM_LIB_UTF8PROC=1"
#MAKEOPT+=" USE_SYSTEM_LIB_GLM=1"
#MAKEOPT+=" USE_SYSTEM_LIB_RAPIDJSON=1"
#MAKEOPT+=" USE_SYSTEM_LIB_PUGIXML=1"

# CUSTOMISABLE
[ ! -z $PREFIX        ] && MAKEOPT+=" PREFIX=${PREFIX}"
[ ! -z $STG           ] && MAKEOPT+=" SUBTARGET=${STG}"
[ $TOOLS -eq 1        ] && MAKEOPT+=" TOOLS=${TOOLS}"
[ $REGENIE -eq 1      ] && MAKEOPT+=" REGENIE=${REGENIE}"
[ ${NETWORKING} -eq 1 ] && MAKEOPT+=" USE_NETWORK=${NETWORKING} OSD_NET_USE_TAPTUN=1"
[ ${DEBUG} -eq 1      ] && MAKEOPT+=" STRIP_SYMBOLS=0 DEBUG=${DEBUG}"
[ ${DEBUG} -eq 0      ] && MAKEOPT+=" STRIP_SYMBOLS=1"
[ ${PROFILER} -eq 1   ] && MAKEOPT+=" PROFILER=1" 
[ ! -z ${SOURCES}     ] && MAKEOPT+=" SOURCES=$SOURCES"
[ ! -z ${OSD}         ] && MAKEOPT+=" OSD=$OSD" 

#### END OPTS

#### CFLAGS
# fix for ubuntu see https://docs.mamedev.org/initialsetup/compilingmame.html#gnu-c-library-fortify-source-feature
# - https://github.com/mamedev/mame/issues/11922
# - https://www.reddit.com/r/MAME/comments/18gddpk/mame_261_arm/
#MAKEOPT+=" CFLAGS=\"-U_FORTIFY_SOURCE -fsigned-char\""
CFLAGS=""
CFLAGS+="-U_FORTIFY_SOURCE" # unset UBUNTU default compiler flag
CFLAGS+=" -fsigned-char" # ARM namcos11 workaround


[ -f $FAILDROP ] && rm -f $FAILDROP

[ ! -f ${MAMEGIT}/.git/config ] && git clone ${REPO}
cd ${MAMEGIT}

## GIT operations
git checkout master
git pull
## CHECK version, set latest (this is currently unused)
MAMEVER=${MAMEASK:-$(git tag | tail -n1)}

REQFAIL=0
[ -z "${MAMEVER}" ] && echo "Couldn't set MAMEVER, intervene" && REQFAIL=1
[ $REQFAIL -ne 0 ] && exit $REQFAIL
git checkout ${MAMEVER}

#git branch
# wait here and show version coz of sadness
VERMSG="We are going to compile MAME version ${MAMEVER}"
echo -n $VERMSG
sleep 5

log() {
  echo "[$(date +'%Y-%m-%d %H:%M:%S')] ${1}"| tee -a "${2}"
}

drop() {
  touch $FAILDROP
}

function version_check {
  MAMEVER=$( "${MAMEGIT}/mame" -version | sed -r 's/([0-9]+)\.([0-9]+)\s.*/\1\2/')
  echo $MAMEVER
}

function install {

  MAMEVER=$(version_check)
  [ -z "$MAMEVER" ] && echo "Failed to set MAMEVER, cannot install" && drop && exit 1
  MAMEDEST=$HOME/games/emulator-mame${MAMEVER}

  echo "installing to $MAMEDEST"
  mkdir -p "${MAMEDEST}"

  cd ${MAMEGIT}
  for _file in mame castool chdman floptool imgtool jedutil ldresample ldverify nltool nlwav pngcmp regrep romcmp split srcclean testkeys unidasm
  do
    cp $_file "${MAMEDEST}"
  done

  cp -dr ${MAMEGIT}/{artwork,bgfx,plugins,language,ctrlr,keymaps,hash} "${MAMEDEST}"
  
}

#make clean # As per https://www.mameworld.info/ubbthreads/showthreaded.php?Cat=&Number=389727&page=0&view=&sb=5&o=&fpart=1&vc=1

### COMPILE (with retry counts)
while [ ${TRCNT} -le ${TRIES} ]
do
  FAIL=1
  ## LOGNAME set log name for attempt
  MAMELOG="${MAMELOGDIR}/make_${MAMEVER}_a(${TRCNT})_$(date +'%Y-%m-%d_%H-%M-%S').log"

  log "Compiling with ${MAKEOPT} attempt ${TRCNT}" $MAMELOG
  log "gcc Version: $($GCC_VER --version)" ${MAMELOG}
  log "CC will be set to $GCC_VER" ${MAMELOG}
  log "g++ Version: $($GPP_VER --version)" ${MAMELOG}
  log "CXX will be set to $GPP_VER" ${MAMELOG}

  ## TEST
  #cp ../genie.lua scripts/
  log "BUILD START" $MAMELOG

  ## BUILD
  make CC=$GCC_VER CXX=$GPP_VER ${MAKEOPT} CFLAGS="${CFLAGS}" -j ${MAXTHRD} 2>&1 | tee -a ${MAMELOG}
  FAIL=$?

  log "BUILD END" $MAMELOG
  TRCNT=$(( ${TRCNT} + 1 ))
  ## If compile was successful exit
  if [ $FAIL -eq 0 ] 
  then
    log "BUILD SUCCESS" $MAMELOG
    log "INSTALL START" $MAMELOG
    install
    log "INSTALL END" $MAMELOG
  else
    log "BUILD FAILED" $MAMELOG
    drop
  fi
  exit $FAIL
done

